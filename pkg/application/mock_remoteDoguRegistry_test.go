// Code generated by mockery v2.20.0. DO NOT EDIT.

package application

import (
	core "github.com/cloudogu/cesapp-lib/core"
	domainservice "github.com/cloudogu/k8s-blueprint-operator/pkg/domainservice"
	mock "github.com/stretchr/testify/mock"
)

// mockRemoteDoguRegistry is an autogenerated mock type for the remoteDoguRegistry type
type mockRemoteDoguRegistry struct {
	mock.Mock
}

type mockRemoteDoguRegistry_Expecter struct {
	mock *mock.Mock
}

func (_m *mockRemoteDoguRegistry) EXPECT() *mockRemoteDoguRegistry_Expecter {
	return &mockRemoteDoguRegistry_Expecter{mock: &_m.Mock}
}

// GetDogu provides a mock function with given fields: qualifiedDoguName, version
func (_m *mockRemoteDoguRegistry) GetDogu(qualifiedDoguName string, version string) (*core.Dogu, error) {
	ret := _m.Called(qualifiedDoguName, version)

	var r0 *core.Dogu
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string) (*core.Dogu, error)); ok {
		return rf(qualifiedDoguName, version)
	}
	if rf, ok := ret.Get(0).(func(string, string) *core.Dogu); ok {
		r0 = rf(qualifiedDoguName, version)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*core.Dogu)
		}
	}

	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(qualifiedDoguName, version)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// mockRemoteDoguRegistry_GetDogu_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetDogu'
type mockRemoteDoguRegistry_GetDogu_Call struct {
	*mock.Call
}

// GetDogu is a helper method to define mock.On call
//   - qualifiedDoguName string
//   - version string
func (_e *mockRemoteDoguRegistry_Expecter) GetDogu(qualifiedDoguName interface{}, version interface{}) *mockRemoteDoguRegistry_GetDogu_Call {
	return &mockRemoteDoguRegistry_GetDogu_Call{Call: _e.mock.On("GetDogu", qualifiedDoguName, version)}
}

func (_c *mockRemoteDoguRegistry_GetDogu_Call) Run(run func(qualifiedDoguName string, version string)) *mockRemoteDoguRegistry_GetDogu_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string))
	})
	return _c
}

func (_c *mockRemoteDoguRegistry_GetDogu_Call) Return(_a0 *core.Dogu, _a1 error) *mockRemoteDoguRegistry_GetDogu_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *mockRemoteDoguRegistry_GetDogu_Call) RunAndReturn(run func(string, string) (*core.Dogu, error)) *mockRemoteDoguRegistry_GetDogu_Call {
	_c.Call.Return(run)
	return _c
}

// GetDogus provides a mock function with given fields: dogusToLoad
func (_m *mockRemoteDoguRegistry) GetDogus(dogusToLoad []domainservice.DoguToLoad) (map[string]*core.Dogu, error) {
	ret := _m.Called(dogusToLoad)

	var r0 map[string]*core.Dogu
	var r1 error
	if rf, ok := ret.Get(0).(func([]domainservice.DoguToLoad) (map[string]*core.Dogu, error)); ok {
		return rf(dogusToLoad)
	}
	if rf, ok := ret.Get(0).(func([]domainservice.DoguToLoad) map[string]*core.Dogu); ok {
		r0 = rf(dogusToLoad)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]*core.Dogu)
		}
	}

	if rf, ok := ret.Get(1).(func([]domainservice.DoguToLoad) error); ok {
		r1 = rf(dogusToLoad)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// mockRemoteDoguRegistry_GetDogus_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetDogus'
type mockRemoteDoguRegistry_GetDogus_Call struct {
	*mock.Call
}

// GetDogus is a helper method to define mock.On call
//   - dogusToLoad []domainservice.DoguToLoad
func (_e *mockRemoteDoguRegistry_Expecter) GetDogus(dogusToLoad interface{}) *mockRemoteDoguRegistry_GetDogus_Call {
	return &mockRemoteDoguRegistry_GetDogus_Call{Call: _e.mock.On("GetDogus", dogusToLoad)}
}

func (_c *mockRemoteDoguRegistry_GetDogus_Call) Run(run func(dogusToLoad []domainservice.DoguToLoad)) *mockRemoteDoguRegistry_GetDogus_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]domainservice.DoguToLoad))
	})
	return _c
}

func (_c *mockRemoteDoguRegistry_GetDogus_Call) Return(_a0 map[string]*core.Dogu, _a1 error) *mockRemoteDoguRegistry_GetDogus_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *mockRemoteDoguRegistry_GetDogus_Call) RunAndReturn(run func([]domainservice.DoguToLoad) (map[string]*core.Dogu, error)) *mockRemoteDoguRegistry_GetDogus_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTnewMockRemoteDoguRegistry interface {
	mock.TestingT
	Cleanup(func())
}

// newMockRemoteDoguRegistry creates a new instance of mockRemoteDoguRegistry. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockRemoteDoguRegistry(t mockConstructorTestingTnewMockRemoteDoguRegistry) *mockRemoteDoguRegistry {
	mock := &mockRemoteDoguRegistry{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
