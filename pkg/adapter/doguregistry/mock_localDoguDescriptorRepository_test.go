// Code generated by mockery v2.53.3. DO NOT EDIT.

package doguregistry

import (
	context "context"

	dogu "github.com/cloudogu/ces-commons-lib/dogu"
	core "github.com/cloudogu/cesapp-lib/core"

	mock "github.com/stretchr/testify/mock"
)

// mockLocalDoguDescriptorRepository is an autogenerated mock type for the localDoguDescriptorRepository type
type mockLocalDoguDescriptorRepository struct {
	mock.Mock
}

type mockLocalDoguDescriptorRepository_Expecter struct {
	mock *mock.Mock
}

func (_m *mockLocalDoguDescriptorRepository) EXPECT() *mockLocalDoguDescriptorRepository_Expecter {
	return &mockLocalDoguDescriptorRepository_Expecter{mock: &_m.Mock}
}

// Add provides a mock function with given fields: ctx, name, _a2
func (_m *mockLocalDoguDescriptorRepository) Add(ctx context.Context, name dogu.SimpleName, _a2 *core.Dogu) error {
	ret := _m.Called(ctx, name, _a2)

	if len(ret) == 0 {
		panic("no return value specified for Add")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, dogu.SimpleName, *core.Dogu) error); ok {
		r0 = rf(ctx, name, _a2)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockLocalDoguDescriptorRepository_Add_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Add'
type mockLocalDoguDescriptorRepository_Add_Call struct {
	*mock.Call
}

// Add is a helper method to define mock.On call
//   - ctx context.Context
//   - name dogu.SimpleName
//   - _a2 *core.Dogu
func (_e *mockLocalDoguDescriptorRepository_Expecter) Add(ctx interface{}, name interface{}, _a2 interface{}) *mockLocalDoguDescriptorRepository_Add_Call {
	return &mockLocalDoguDescriptorRepository_Add_Call{Call: _e.mock.On("Add", ctx, name, _a2)}
}

func (_c *mockLocalDoguDescriptorRepository_Add_Call) Run(run func(ctx context.Context, name dogu.SimpleName, _a2 *core.Dogu)) *mockLocalDoguDescriptorRepository_Add_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(dogu.SimpleName), args[2].(*core.Dogu))
	})
	return _c
}

func (_c *mockLocalDoguDescriptorRepository_Add_Call) Return(_a0 error) *mockLocalDoguDescriptorRepository_Add_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockLocalDoguDescriptorRepository_Add_Call) RunAndReturn(run func(context.Context, dogu.SimpleName, *core.Dogu) error) *mockLocalDoguDescriptorRepository_Add_Call {
	_c.Call.Return(run)
	return _c
}

// Get provides a mock function with given fields: ctx, doguVersion
func (_m *mockLocalDoguDescriptorRepository) Get(ctx context.Context, doguVersion dogu.SimpleNameVersion) (*core.Dogu, error) {
	ret := _m.Called(ctx, doguVersion)

	if len(ret) == 0 {
		panic("no return value specified for Get")
	}

	var r0 *core.Dogu
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, dogu.SimpleNameVersion) (*core.Dogu, error)); ok {
		return rf(ctx, doguVersion)
	}
	if rf, ok := ret.Get(0).(func(context.Context, dogu.SimpleNameVersion) *core.Dogu); ok {
		r0 = rf(ctx, doguVersion)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*core.Dogu)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, dogu.SimpleNameVersion) error); ok {
		r1 = rf(ctx, doguVersion)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// mockLocalDoguDescriptorRepository_Get_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Get'
type mockLocalDoguDescriptorRepository_Get_Call struct {
	*mock.Call
}

// Get is a helper method to define mock.On call
//   - ctx context.Context
//   - doguVersion dogu.SimpleNameVersion
func (_e *mockLocalDoguDescriptorRepository_Expecter) Get(ctx interface{}, doguVersion interface{}) *mockLocalDoguDescriptorRepository_Get_Call {
	return &mockLocalDoguDescriptorRepository_Get_Call{Call: _e.mock.On("Get", ctx, doguVersion)}
}

func (_c *mockLocalDoguDescriptorRepository_Get_Call) Run(run func(ctx context.Context, doguVersion dogu.SimpleNameVersion)) *mockLocalDoguDescriptorRepository_Get_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(dogu.SimpleNameVersion))
	})
	return _c
}

func (_c *mockLocalDoguDescriptorRepository_Get_Call) Return(_a0 *core.Dogu, _a1 error) *mockLocalDoguDescriptorRepository_Get_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *mockLocalDoguDescriptorRepository_Get_Call) RunAndReturn(run func(context.Context, dogu.SimpleNameVersion) (*core.Dogu, error)) *mockLocalDoguDescriptorRepository_Get_Call {
	_c.Call.Return(run)
	return _c
}

// newMockLocalDoguDescriptorRepository creates a new instance of mockLocalDoguDescriptorRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockLocalDoguDescriptorRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockLocalDoguDescriptorRepository {
	mock := &mockLocalDoguDescriptorRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
